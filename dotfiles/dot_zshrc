# Keybinds
bindkey "^[[1;5C"    forward-word # Ctrl+Right
bindkey "^[[1;5D"   backward-word # Ctrl+Left
bindkey ";2A"          up-history # Shift+Up
bindkey ";2B"        down-history # Shift+Down
bindkey "^[[5~"        up-history # PageUp
bindkey "^[[6~"      down-history # PageDown
bindkey "^[[3~"       delete-char
bindkey "^[[3;5~" 	kill-word
bindkey "^H"   backward-kill-word
# 1st found function will return the first found command in a group
_1st_found() {
    for cmd in "$@"; do
        if type "$cmd" &>/dev/null; then
            printf "%s" "${cmd}"
            break
        fi
    done
}

# Path variables
export ZDIR="${HOME}/.zsh"

export PAGER=$(_1st_found most less more)
export EDITOR=$(_1st_found nano kate code)

# Initialize Zsh completion system
autoload -U compinit
compinit


# export NVM_DIR="${HOME}/.nvm"

for file in "${ZDIR}/theme.zsh" \
            "${ZDIR}/aliases.zsh" \
            "${ZDIR}/set_history.zsh" \
            "${ZDIR}/zinit.zsh" \
            "${ZDIR}/completions.zsh" \
            "${ZDIR}/command-not-found.zsh"\
            "${ZDIR}/gpg.zsh"
do
    [ -s "${file}" ] && source "${file}"
done

FNM_PATH="${HOME}/.fnm"
if [ -d "$FNM_PATH" ]; then
  export PATH="${HOME}/.fnm:$PATH"
  eval "`fnm env`"
fi



# Set options
setopt interactive_comments extended_glob autocd complete_aliases

auto-ls () { ls; }
[[ ${chpwd_functions[(r)auto-ls]} == auto-ls ]] || chpwd_functions=( auto-ls $chpwd_functions )

# Run manpage on Esc+h
autoload -Uz run-help
autoload -Uz run-help-git
autoload -Uz run-help-sudo
bindkey '^[h' run-help  # Esc+h

# Choose binary in $PATH with fzf
insert_binary_from_path() {
    cmd=$(print -rl -- ${(ko)commands} | fzf --height 40% --layout=reverse)
    LBUFFER="${LBUFFER}${cmd}"
    zle redisplay
}
zle -N insert_binary_from_path
bindkey '^[d' insert_binary_from_path  # Alt+d


unset -f _1st_found

# pnpm
export PNPM_HOME="${HOME}/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
